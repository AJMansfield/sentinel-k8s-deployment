---
# Source: samba-honeypot/templates/samba-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: smb-samba-config
  namespace: default
  labels:
    app: smb
data:
  smb.conf: "[homes]\n    comment = Home Directories\n    browseable = no\n    writable
    = yes\n    # vfs objects = full_audit\n\n[printers]\n    comment = All Printers\n
    \   path = /var/tmp\n    browseable = no\n    guest ok = no\n    writable = no\n
    \   printable = yes\n    # vfs objects = full_audit\n    \n[public]\n    comment
    = Public Files\n    path = /home/public\n    public = yes\n    writable = no\n    printable
    = no\n    write list = +staff\n    # vfs objects = full_audit\n    \n[guest]\n    comment
    = Guest Files\n    path = /home/guest\n    public = yes\n    browseable = yes\n
    \   writable = yes\n    printable = no\n    guest ok = yes\n    # vfs objects =
    full_audit\n\n[global]\n    max log size = 10\n    netbios name = SAMBA\n\n    security
    = user\n    passdb backend = tdbsam\n    guest account = guest\n    \n    bind interfaces
    only = yes\n    interfaces = lo net1\n\n    load printers = yes\n    cups options
    = raw\n\n    full_audit:prefix = %u|%U|%I|%m|%S|%T|%D\n    full_audit:success =
    mkdir rename unlink rmdir pwrite\n    full_audit:failure = connect\n    full_audit:syslog
    = false"
---
# Source: samba-honeypot/templates/samba-environment.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: smb-samba-environment
  namespace: default
  labels:
    app: smb
data:
  SAMBA_CONF_LOG_LEVEL: "1 auth_json_audit:5@/var/log/samba/json.auth full_audit:1@/var/log/samba/log.audit"
  # SAMBA_CONF_LOG_LEVEL: "1 auth_json_audit:5@/var/log/samba/json.auth"
  SAMBA_CONF_WORKGROUP: "WORKGROUP"
  SAMBA_CONF_SERVER_STRING: "Samba Server Version %v"
  GROUP_staff: "1500"
  ACCOUNT_groucho: swordfish
  UID_groucho: "500"
  GROUPS_groucho: staff
  WSDD2_DISABLE: "1"
---
# Source: samba-honeypot/templates/udhcpc-scripts.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: smb-udhcpc-scripts
  namespace: default
  labels:
    app: smb
data:
  default.script: |-
    #!/bin/sh
    [ -n "$1" ] || { echo "Error: should be called from udhcpc"; exit 1; }
  
    NETMASK=""
    [ -n "$subnet" ] && NETMASK="netmask $subnet"
    BROADCAST="broadcast +"
    [ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
  
    case "$1" in
        deconfig)
        echo "Setting IP address 0.0.0.0 on $interface"
        ifconfig $interface 0.0.0.0
        ;;
  
        renew|bound)
        echo "Setting IP address $ip on $interface"
        ifconfig $interface $ip $NETMASK $BROADCAST
    esac
  
    exit 0
---
# Source: samba-honeypot/templates/vol-home.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: smb-home
  namespace: default
  labels:
    app: smb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: samba-honeypot/templates/vol-logs.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: smb-logs
  namespace: default
  labels:
    app: smb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: samba-honeypot/templates/samba.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smb-samba
  namespace: default
  labels:
    app: smb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: smb
  template:
    metadata:
      labels:
        app: smb
      annotations:
        k8s.v1.cni.cncf.io/networks: honeynet/macvlan
    spec:
      hostname: smb
      shareProcessNamespace: true

      volumes:
      - name: home
        persistentVolumeClaim:
          claimName: smb-home
      - name: logs
        persistentVolumeClaim:
          claimName: smb-logs
      - name: config
        configMap:
          name: smb-samba-config
      - name: udhcpc-scripts
        configMap:
          name: smb-udhcpc-scripts
          defaultMode: 0700

      initContainers:
      - name: mkdir
        image: busybox
        command: ["/bin/sh","-c"]
        args:
        - >-
          mkdir -m 0755 /home/public /home/guest /home/groucho ;
          chown 500 /home/groucho ;
        volumeMounts:
        - name: home
          mountPath: /home

      containers:
      - name: smb
        image: servercontainers/samba:latest
        envFrom:
        - configMapRef:
            name: samba-env
        volumeMounts:
        - name: home
          mountPath: /home
        - name: logs
          mountPath: /var/log
        - name: config
          mountPath: /container/config/samba
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add: ["NET_BIND_SERVICE", "NET_BROADCAST", "NET_ADMIN"]

      - name: dhcp
        image: busybox
        command: [
          "udhcpc",
          "-i", "net1", # Interface to use
          "-B", # Request broadcast replies (so everyone sees us)
          "-T", "5", # Pause between packets
          "-R", # Release IP on exit
          "-f", # Run in foreground
          "-a", # Validate offerred address with ARP ping (so everyone sees us)
          "-O", "12", # request Host Name
          "-O", "15", # request Domain Name
          "-O", "42", # request NTP Servers
          "-O", "119", # request Doman Search
          "-O", "120", # request SIP Servers
          "-x", "hostname:smb", # provide option 22
          # "-x", "lease:60", # request short 60-second lease
          "-F", "smb", # Ask server to update DNS mapping 
          "-V", "Microsloth", # Vendor identifier (replacing udhcp version info)
        ]
        volumeMounts:
        - mountPath: "/usr/share/udhcpc"
          name: udhcpc-scripts
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add: ["NET_BIND_SERVICE", "NET_BROADCAST", "NET_ADMIN"]
      
      - image: jonasped/wsdd
        name: wsd
        env:
        - name: WSDD_ARGS
          value: "--interface net1 --hostname smb --workgroup WORKGROUP"
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add: ["NET_BIND_SERVICE", "NET_BROADCAST"]
---
# Source: samba-honeypot/templates/auditbeat.yaml
# Adapted from https://raw.githubusercontent.com/elastic/cloud-on-k8s/2.6/config/recipes/beats/auditbeat_hosts.yaml
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: smb-auditbeat
  namespace: default
  labels:
    app: smb
spec:
  type: auditbeat
  version: 8.5.2
  elasticsearchRef:
    name: elasticsearch
    namespace: elastic
  kibanaRef:
    name: kibana
    namespace: elastic
  config:
    auditbeat.modules:
    - module: auditd
      audit_rules: |
        -a always,exit -F dir=/mnt/home/ -F perm=rwxa -F key=samba
  daemonSet:
    podTemplate:
      spec:
        hostPID: true  # Required by auditd module
        securityContext:
          runAsUser: 0
        volumes:
        - name: home
          persistentVolumeClaim:
            claimName: smb-home
        containers:
        - name: auditbeat
          securityContext:
            capabilities:
              add: ['AUDIT_READ', 'AUDIT_WRITE', 'AUDIT_CONTROL']
          volumeMounts:
          - name: home
            mountPath: "/mnt/home"
            readOnly: true
---
# Source: samba-honeypot/templates/filebeat.yaml
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: smb-filebeat
  namespace: default
  labels:
    app: smb
spec:
  type: filebeat
  version: 8.6.2
  elasticsearchRef:
    name: elasticsearch
    namespace: elastic
  kibanaRef:
    name: kibana
    namespace: elastic
  config:
    filebeat.inputs:
    - type: filestream
      id: samba-text-logs
      paths:
      - /var/log/samba/log.*
      prospector.scanner.symlinks: true
      prospector.scanner.resend_on_touch: true
      parsers:
      - multiline:
          type: pattern
          pattern: '^[[:space:]]'
          negate: false
          match: after
      processors:
      - dissect:
          tokenizer: "[%{timestamp},  %{fd|integer}] %{src_path}:%{src_line|integer}(%{src_func})\n%{body}"
          field: message
      - timestamp:
          field: dissect.timestamp
          # target_field: original_time
          layouts:
          - '2006/01/02 15:04:05'
          test:
          - '2023/02/21 19:17:24'

    - type: filestream
      id: samba-json-logs
      paths:
      - /var/log/samba/json.*
      prospector.scanner.symlinks: true
      prospector.scanner.resend_on_touch: true
      parsers:
      - ndjson:
          target: samba
          add_error_key: true
      processors:
      - timestamp:
          field: samba.timestamp
          # target_field: original_time
          layouts:
          - '2006-01-02T15:04:05.999999-0700'
          test:
          - '2023-02-21T19:20:09.712746+0000'

  daemonSet:
    podTemplate:
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - name: filebeat
          volumeMounts:
          - name: logs
            mountPath: /var/log
        volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: smb-logs
