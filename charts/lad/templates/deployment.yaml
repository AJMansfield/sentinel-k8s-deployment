apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-lad
  namespace: {{ .Release.Namespace }}
  labels: {{- include "lad.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "lad.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "lad.labels" . | nindent 8 }}
    spec:
      containers:
      - name: lad
        image: ajmansfield/log-anomaly-detector:latest
        imagePullPolicy: Always
        command:
          - log-anomaly-detector
        args:
          - run
        env:
        - name: ES_ENDPOINT
          value: "https://{{ .Values.eck.elasticsearchRef.name }}-es-http.{{ .Values.eck.elasticsearchRef.namespace }}.svc:9200"
        - name: ES_USER
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-elastic"
              key: username
        - name: ES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-elastic"
              key: password
        - name: ES_USE_SSL
          value: "True"

        - name: STORAGE_DATASOURCE
          value: "es"
        - name: STORAGE_DATASINK
          value: "es"
        - name: ES_INPUT_INDEX
          value: "logstash-"
        - name: ES_TARGET_INDEX
          value: "odcs-anomaly-detect-"
        - name: ES_VERSION
          value: 7
        - name: INFER_ANOMALY_THRESHOLD
          value: 1.3
        - name: INFER_TIME_SPAN
          value: 10
        - name: INFER_LOOPS
          value: 1
        - name: PARALLELISM
          value: 6
        - name: SOMPY_TRAIN_ROUGH_LEN
          value: 100
        - name: SOMPY_TRAIN_FINETUNE_LEN
          value: 5
        - name: SOMPY_INIT
          value: "random"

        # - name: FACT_STORE_URL
        #   value: ${FACT_STORE_URL}
        resources:
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
        - mountPath: /opt/app-root/src/models
          name: model-storage
        - mountPath: /opt/app-root/src/validation_data
          name: volume-ehbcr
        - name: elasticsearch-certs
          mountPath: /etc/elastic/elasticsearch/certs
          readOnly: true
        # - mountPath: /etc/elastic/kibana/certs
        #   name: kibana-certs
        #   readOnly: true

      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-model-storage
      - name: elasticsearch-certs
        secret:
          defaultMode: 420
          optional: false
          secretName: {{ .Release.Name }}-fakebeat-beat-es-ca
